@inject IModalService ModalService
@inject ProbaServer.ProbaServerClient ProbaServerClient
@using Google.Protobuf.WellKnownTypes;

<div class="simple-form">

    <div class="form-group">
        <label for="greeting">Proba Name</label>
        <input @bind="Proba.Greeting" type="text" id="greeting" class="form-control" placeholder="Enter a greeting" />
    </div>

    <div class="form-group">
        <label for="year">Proba Count</label>
        <input @bind="Proba.Count" type="text" id="year" class="form-control" />
    </div>

    @*<div class="form-group">
        <label for="year">Proba Data</label>
        <input @bind="@Proba.Date" type="date" class="form-control" />
    </div>*@

    <div class="form-group">
        <label for="number">Proba Value</label>
        <input @bind="Proba.Value" id="number" type="number" class="form-control" />
    </div>

    <button @onclick="Save" class="btn btn-primary">Submit</button>
    <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    ProbaMessage Proba { get; set; }

    protected override void OnInitialized()
    {
        Proba = new ProbaMessage();
    }

    async Task Save()
    {
        await ProbaServerClient.AddProbaAsync(Proba);
        await BlazoredModal.CloseAsync(ModalResult.Ok(Proba));
    }

    async Task Cancel()
    {
        await BlazoredModal.CancelAsync();
    }
}

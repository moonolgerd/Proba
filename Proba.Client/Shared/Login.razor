@inject IModalService ModalService
@inject ProbaServer.ProbaServerClient ProbaServerClient
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div>
    <div class="simple-form">

        <div class="form-group">
            <label for="email">Email</label>
            <input @bind="Email" type="text" id="email" class="form-control" placeholder="Enter your email" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <input @bind="Password" type="password" id="password" class="form-control" />
        </div>

        <button @onclick="Forgot" class="btn btn-warning">Forgot Password ?</button>

        <button @onclick="OnLogin" class="btn btn-primary">Login</button>
        <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
    </div>
</div>

@code {
    string Email { get; set; }
    string Password { get; set; }
    bool ForgotPassword { get; set; }

    async Task OnLogin()
    {
        var reply = await ProbaServerClient.AutorizeAsync(new AuthorizeRequest { Name = Email });
        if (reply.Token != null)
        {
            var token = $"Bearer {reply.Token}";
            await LocalStorage.SetItemAsync("token", token);
            ModalService.Close(ModalResult.Ok(true));
        }
    }

    void Cancel()
    {
        ModalService.Cancel();
    }

    void Forgot()
    {

    }
}
